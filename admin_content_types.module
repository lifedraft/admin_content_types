<?php

require_once('admin_content_types.admin.inc');

/**
 * Implements hook_menu().
 */
function admin_content_types_menu() {
  $items = array();

  $items['node/create_by_category'] = array(
    'title' => 'Create by category',
    'description' => 'Displays Content Types by category',
    'page callback' => 'admin_content_types_page',
    'access callback' => '_node_add_access',
    'type' => MENU_NORMAL_ITEM
  );

  /* Setting Area */
  
  $items['admin/settings/admin_content_types'] = array(
    'title' => 'Admin Content Types',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('admin_content_types_settings_form'),
    'access arguments' => array('administer admin_content_types'),
  );

  $types = admin_content_types_by_tid();

  foreach ($types['terms'] as $term) {
    $tid = $term->tid;
  
    if ($types['content_by_tid'][$tid]) {

      $items['node/create_by_category/' . $tid] = array(
        'title' => $term->name,
        'page callback' => 'admin_content_types_page',
        'page arguments' => array(3),
        'access callback' => '_node_add_access',
      );

      foreach ($types['content_by_tid'][$tid] as $type => $value) {
        $items['node/create_by_category/' . $tid . '/' . $type] = array(
          'title' => $value['title'],
          'description' => $value['description'],
          'page callback' => 'drupal_goto',
          'page arguments' => array($value['href']),
          
          'access callback' => 'node_access',
          'access arguments' => array('create', $type),
        );
      
        unset($types['content'][$type]);
      }
          
    }
  
  }

  if ($types['content']) {

    $items['admin/content/create_by_category/default'] = array(
      'title' => 'Default',
      'page callback' => 'admin_content_types_page',
      'page arguments' => array(3),
      'access callback' => '_node_add_access',
    );
  
    foreach ($types['content'] as $type => $value) {
      $items['admin/content/create_by_category/default/' . $type] = array(
        'title' => $value['title'],
        'description' => $value['description'],
        'page callback' => 'drupal_goto',
        'page arguments' => array($value['href']),
        'access callback' => 'node_access',
        'access arguments' => array('create', $type),

      );
    }

  }  
  
  return $items;
}

/**
 * Implements hook_menu_alter().
 * just nice to have this also under content managment in the admin_menu
 */
function admin_content_types_menu_alter(&$items) {
  $menu = admin_content_types_menu();
  foreach ($menu as $path => $item) {
    if (strpos($path, 'node/create_by_category') !== FALSE) {
      $new_path = str_replace("node/create_by_category", "admin/content/create_by_category", $path);
      $items[$new_path] = $item;
    }
  }  
}


function admin_content_types_by_tid() {
  drupal_load('module', 'devel');
  
  $variable = variable_get('admin_content_type_tids', array());
  
  foreach (node_get_types('types', NULL, TRUE) as $type) {
    $type_url_str = str_replace('_', '-', $type->type);
    
    $content[$type_url_str] = array(
      'title' => $type->name,
      'href' => 'node/add/' . $type_url_str,
      'description' => $type->description,
      'localized_options' => array()
    );
  }
  
  $content_by_tid = array();
  
  foreach ($content as $type => $value) {
        
    $tid = "default";
    
    if ($variable[$type]) {
      $tid = $variable[$type];
    }
    
    $content_by_tid[$tid][$type] = $value;
    
  }
  
  $terms = array_reverse(taxonomy_get_tree(variable_get('admin_content_types_vid', 1)));
  
  $ret = array('content_by_tid' => $content_by_tid, "content" => $content, 'terms' => $terms);
  
  return $ret;
}

function admin_content_types_page($tid = NULL) {
  
  $types = admin_content_types_by_tid();
  $output = admin_content_types_render($types["content_by_tid"], $types["content"], $types["terms"]);
  
  if ($tid && $output[$tid]) {
    return drupal_render($output[$tid]);
  }
  
  return drupal_render($output);
}

function admin_content_types_render($content_by_tid, $content, $terms) {
  
  $output = array();
  
  foreach ($terms as $term) {
    $tid = $term->tid;
    
    if ($content_by_tid[$tid]) {
      
      $output[$tid] = array(
        '#title' => $term->name,
        '#type' => 'fieldset',
        '#collapsible' => true,
      );
      
      $children = array();
      
      foreach ($content_by_tid[$tid] as $type => $value) {
        $children[] = $content[$type];
        unset($content[$type]);
      }
      
      $output[$tid]['#children'] = theme('node_add_list', $children);
      
    }
    
  }
  
  if (count($content)) {
    $new_output['default'] = array(
      '#title' => 'Default',
      '#type' => 'fieldset',
      '#collapsible' => true,
    );
    
    $new_output['default']['#children'] = theme('node_add_list', $content);
    $new_output += $output;  
    $output = $new_output;
  
  }
  
  return $output;
  
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function admin_content_types_form_node_type_form_alter(&$form, &$form_state) {

  $variable = variable_get('admin_content_type_tids', array());
  $content_type = $form['identity']['type']['#default_value'];

  $default_value = 0;
  
  if ($variable[$content_type]) {
    $default_value = $variable[$content_type];
  }
  
  $form['identity']['admin_content_type_tid'] = _taxonomy_term_select(
    t('Category'),
    "", 
    $default_value,
    variable_get('admin_content_types_vid', 1),
    NULL,
    NULL,
    t('Default')
  );
  
  $form['identity']['admin_content_type_tid']['#weight'] = 1;
  $form['#submit'][] = "admin_content_types_node_type_form_submit";

}


function admin_content_types_node_type_form_submit(&$form, &$form_state) {
  
  $tid = $form_state['values']['admin_content_type_tid'];
  
  $variable = variable_get('admin_content_type_tids', array());
  $content_type = $form_state['values']['type'];

  $variable[$content_type] = $form_state['values']['admin_content_type_tid'];
  
  variable_set('admin_content_type_tids', $variable);
  
}